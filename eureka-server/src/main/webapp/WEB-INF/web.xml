<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <!--负责Eureka-server初始化的-->
    <listener>
        <listener-class>com.netflix.eureka.EurekaBootStrap</listener-class>
    </listener>

    <!--    任何一个请求都会经过这些filter，这些filter回对每个请求进行处理-->
    <!--    负责状态相关的处理逻辑-->
    <filter>
        <filter-name>statusFilter</filter-name>
        <filter-class>com.netflix.eureka.StatusFilter</filter-class>
    </filter>

    <!--    对请求进行授权认证的处理-->
    <filter>
        <filter-name>requestAuthFilter</filter-name>
        <filter-class>com.netflix.eureka.ServerRequestAuthFilter</filter-class>
    </filter>
    <!--    负责限流相关的逻辑（很有可能成为eureka-server里面的一个技术亮点，看看人家eureka-server作为一个注册中心，是怎么做限流的，限流算法是什么-->
    <filter>
        <filter-name>rateLimitingFilter</filter-name>
        <filter-class>com.netflix.eureka.RateLimitingFilter</filter-class>
    </filter>
    <!--    gzip：跟压缩相关的，encoding：编码相关的-->
    <filter>
        <filter-name>gzipEncodingEnforcingFilter</filter-name>
        <filter-class>com.netflix.eureka.GzipEncodingEnforcingFilter</filter-class>
    </filter>

    <filter>
        <filter-name>jersey</filter-name>
        <filter-class>com.sun.jersey.spi.container.servlet.ServletContainer</filter-class>
        <init-param>
            <param-name>com.sun.jersey.config.property.WebPageContentRegex</param-name>
            <param-value>/(flex|images|js|css|jsp)/.*</param-value>
        </init-param>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>com.sun.jersey;com.netflix</param-value>
        </init-param>

        <!-- GZIP content encoding/decoding -->
        <init-param>
            <param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name>
            <param-value>com.sun.jersey.api.container.filter.GZIPContentEncodingFilter</param-value>
        </init-param>
        <init-param>
            <param-name>com.sun.jersey.spi.container.ContainerResponseFilters</param-name>
            <param-value>com.sun.jersey.api.container.filter.GZIPContentEncodingFilter</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>statusFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>requestAuthFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- Uncomment this to enable rate limiter filter.
    <filter-mapping>
      <filter-name>rateLimitingFilter</filter-name>
      <url-pattern>/v2/apps</url-pattern>
      <url-pattern>/v2/apps/*</url-pattern>
    </filter-mapping>
    -->

    <filter-mapping>
        <filter-name>gzipEncodingEnforcingFilter</filter-name>
        <url-pattern>/v2/apps</url-pattern>
        <url-pattern>/v2/apps/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>jersey</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <welcome-file-list>
        <welcome-file>jsp/status.jsp</welcome-file>
    </welcome-file-list>

</web-app>
